<?xml version="1.0" encoding="UTF-8"?>
<!--

 TSDuck - The MPEG Transport Stream Toolkit
 Copyright (c) 2005-2017, Thierry Lelegard
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 1. Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 THE POSSIBILITY OF SUCH DAMAGE.

                 - - - - - - - - - - - - - - - -

 Template for TSDuck XML files describing PSI/SI tables.

 It is used to validate user-provided XML files. Since TSDuck uses a simple
 XML parser without DTD or XML-Schema support, there is no formal standard
 definition. This file defines the valid structure of an XML file. Tags or
 attributes which are not present here will be rejected. The content of
 nodes and attributes in this file are just informative comments.

 Notes on types and formats:
 - Tags and attributes are not case-sensitive.
 - The names of tags and attributes are copied from ISO or DVB standards.
 - Integer values can be represented in decimal or hexadecimal (0x prefix).
 - Booleans are "true" or "false".
 - Hexa content is a suite of hexa digits. Spaces are ignored.

-->
<tsduck>

  <!-- Program Association Table -->
  <PAT version="uint5, default=0"
       current="bool, default=true"
       transport_stream_id="uint16, required"
       network_PID="uint13, optional">
    <!-- One per service -->
    <service service_id="uint16, required" program_map_PID="uint13, required"/>
  </PAT>

  <!-- Conditional Access Table -->
  <CAT version="uint5, default=0"
       current="bool, default=true">
    <_any in="_descriptors"/>
  </CAT>

  <!-- Program Map Table -->
  <PMT version="uint5, default=0"
       current="bool, default=true"
       service_id="uint16, required"
       PCR_PID="uint13, default=0x1FFF">
    <!-- Program-level descriptors -->
    <_any in="_descriptors"/>
    <!-- One per elementary stream -->
    <component stream_type="uint8, required" elementary_PID="uint13, required">
      <_any in="_descriptors"/>
    </component>
  </PMT>

  <!-- Transport Stream Description Table -->
  <TSDT version="uint5, default=0"
        current="bool, default=true">
    <_any in="_descriptors"/>
  </TSDT>

  <!-- Network Information Table -->
  <NIT version="uint5, default=0"
       current="bool, default=true"
       network_id="uint16, required"
       actual="bool, default=true">
    <!-- Network-level descriptors -->
    <_any in="_descriptors"/>
    <!-- One per transport stream -->
    <transport_stream transport_stream_id="uint16, required"
                      original_network_id="uint16, required">
      <_any in="_descriptors"/>
    </transport_stream>
  </NIT>

  <!-- Bouquet Association Table -->
  <BAT version="uint5, default=0"
       current="bool, default=true"
       bouquet_id="uint16, required">
    <!-- Bouquet-level descriptors -->
    <_any in="_descriptors"/>
    <!-- One per transport stream -->
    <transport_stream transport_stream_id="uint16, required"
                      original_network_id="uint16, required">
      <_any in="_descriptors"/>
    </transport_stream>
  </BAT>

  <!-- Running Status Table -->
  <RST>
    <!-- One per event -->
    <event transport_stream_id="uint16, required"
           original_network_id="uint16, required"
           service_id="uint16, required"
           event_id="uint16, required"
           running_status="undefined|not-running|starting|pausing|running|off-air, required"/>
  </RST>

  <!-- Service Description Table -->
  <SDT version="uint5, default=0"
       current="bool, default=true"
       transport_stream_id="uint16, required"
       original_network_id="uint16, required"
       actual="bool, default=true">
    <!-- One per service -->
    <service service_id="uint16, required"
             EIT_schedule="bool, default=false"
             EIT_present_following="bool, default=false"
             running_status="undefined|not-running|starting|pausing|running|off-air, default=undefined"
             CA_mode="bool, default=false">
      <_any in="_descriptors"/>
    </service>
  </SDT>

  <!-- Event Information Table -->
  <!-- If type="pf", this is an EITp/f -->
  <!-- If type="uint4", this is an EITs with TID 0x50+type (actual) or 0x60+type (other) -->  
  <EIT type="pf|uint4, default=pf"
       version="uint5, default=0"
       current="bool, default=true"
       actual="bool, default=true"
       service_id="uint16, required"
       transport_stream_id="uint16, required"
       original_network_id="uint16, required"
       segment_last_section_number="uint8, required"
       last_table_id="uint8, required">
    <!-- One per event -->
    <event event_id="uint16, required"
           start_time="YYYY-MM-DD hh:mm:ss, required"
           duration="hh:mm:ss, required"
           running_status="undefined|not-running|starting|pausing|running|off-air, default=undefined"
           CA_mode="bool, default=false">
      <_any in="_descriptors"/>
    </event>
  </EIT>

  <!-- Time and Date Table -->
  <TDT UTC_time="YYYY-MM-DD hh:mm:ss, required"/>

  <!-- Time Offset Table -->
  <TOT UTC_time="YYYY-MM-DD hh:mm:ss, required">
    <_any in="_descriptors"/>
  </TOT>

  <!-- Generic short table -->
  <generic_short_table
      table_id="uint8, required"
      private="bool, default=true">

    Generic table with binary payload of one short section,
    to be used when a specific table is not yet implemented.
    The body of this element shall contain an even number of
    hexadecimal digits, the payload of the short section.

    The private indicator shall be false on MPEG-defined sections
    and preferably true on DVB-defined and user-defined sections.

  </generic_short_table>

  <!-- Generic long table -->
  <generic_long_table
      table_id="uint8, required"
      table_id_ext="uint16, default=0xFFFF"
      version="uint5, default=0"
      current="bool, default=true"
      private="bool, default=true">

    Generic table with binary payload of long sections,
    to be used when a specific table is not yet implemented.

    The private indicator shall be false on MPEG-defined sections
    and preferably true on DVB-defined and user-defined sections.

    <!-- One per section -->
    <section>
      The body of the section elements shall contain an even number of
      hexadecimal digits, the payload of the long section. The CRC32
      field is not part of this payload, it will be recomputed.
    </section>
  </generic_long_table>

  <!-- Definitions of descriptors -->
  <_descriptors>

    <generic_descriptor tag="uint8, required">
      Generic descriptor with binary payload, to be used when a specific
      descriptor is not yet implemented. The body of this element shall
      contain an even number of hexadecimal digits.
    </generic_descriptor>

    <AC3_descriptor
        component_type="uint8, optional"
        bsid="uint8, optional"
        mainid="uint8, optional"
        asvc="uint8, optional">
      <additional_info>
        Hexadecimal content
      </additional_info>
    </AC3_descriptor>

    <AVC_video_descriptor
        profile_idc="uint8, required"
        constraint_set0="bool, required"
        constraint_set1="bool, required"
        constraint_set2="bool, required"
        AVC_compatible_flags="uint5, required"
        level_idc="uint8, required"
        AVC_still_present="bool, required"
        AVC_24_hour_picture="bool, required"/>

    <bouquet_name_descriptor bouquet_name="string, required"/>

    <CA_descriptor
        CA_system_id="uint16, required"
        CA_PID="uint13, required">
      <private_data>
        Hexadecimal content
      </private_data>
    </CA_descriptor>

    <CA_identifier_descriptor>
      <!-- One per CAS -->
      <CA_system_id value="uint16, required"/>
    </CA_identifier_descriptor>

    <content_descriptor>
      <!-- One per classification -->
      <content content_nibble_level_1="uint4, required"
               content_nibble_level_2="uint4, required"
               user_byte="uint8, required"/>
    </content_descriptor>

    <country_availability_descriptor country_availability="bool, required">
      <!-- One per country -->
      <country country_code="char3, required"/>
    </country_availability_descriptor>

    <data_broadcast_descriptor
        data_broadcast_id="uint16, required"
        component_tag="uint8, required"
        language_code="char3, required">
      <selector_bytes>Hexadecimal content</selector_bytes>
      <text>String</text>
    </data_broadcast_descriptor>

    <data_broadcast_id_descriptor data_broadcast_id="uint16, required">
      <selector_bytes>Hexadecimal content</selector_bytes>
    </data_broadcast_id_descriptor>

    <eacem_stream_identifier_descriptor version_byte="uint8, required"/>

    <enhanced_AC3_descriptor
        mixinfoexists="bool, required"
        component_type="uint8, optional"
        bsid="uint8, optional"
        mainid="uint8, optional"
        asvc="uint8, optional"
        substream1="uint8, optional"
        substream2="uint8, optional"
        substream3="uint8, optional">
      <additional_info>
        Hexadecimal content
      </additional_info>
    </enhanced_AC3_descriptor>

    <eutelsat_channel_number_descriptor>
      <!-- One per service -->
      <service original_network_id="uint16, required"
               transport_stream_id="uint16, required"
               service_id="uint16, required"
               eutelsat_channel_number="uint10, required"/>
    </eutelsat_channel_number_descriptor>

    <extended_event_descriptor
        descriptor_number="uint8, required"
        last_descriptor_number="uint8, required"
        language_code="char3, required">
      <text>String</text>
      <!-- One per item -->
      <item>
        <description>String</description>
        <name>String</name>
      </item>
    </extended_event_descriptor>
    
    <HD_simulcast_logical_channel_descriptor>
      <!-- One per service -->
      <service service_id="uint16, required"
               logical_channel_number="uint10, required"
               visible_service="bool, default=true"/>
    </HD_simulcast_logical_channel_descriptor>

    <ISO_639_language_descriptor>
      <!-- One per language -->
      <language code="char3, required"
                audio_type="uint8, required"/>
    </ISO_639_language_descriptor>

    <linkage_descriptor
        transport_stream_id="uint16, required"
        original_network_id="uint16, required"
        service_id="uint16, required"
        linkage_type="uint8, required">
      <!-- if linkage_type == 0x08 -->
      <mobile_handover_info
          handover_type="uint4, required"
          origin_type="NIT|SDT, required"
          network_id="uint16, required if hand-over_type is 0x01, 0x02, 0x03"
          initial_service_id="uint16, required if origin_type is NIT"/>
      <!-- else if linkage_type == 0x0D -->
      <event_linkage_info
          target_event_id="uint16, required"
          target_listed="bool, required"
          event_simulcast="bool, required"/>
      <!-- else if linkage_type >= 0x0E && linkage_type <= 0x1F -->
      <extended_event_linkage_info>
        <!-- For each event -->
        <event
            target_event_id="uint16, required"
            target_listed="bool, required"
            event_simulcast="bool, required"
            link_type="uint2, required"
            target_id_type="uint2, required"
            user_defined_id="uint16, required if target_id_type == 3"
            target_transport_stream_id="uint16, required if target_id_type == 1"
            target_original_network_id="uint16, optional"
            target_service_id="uint16, optional"/>
      </extended_event_linkage_info>
      <private_data>
        Hexadecimal content
      </private_data>
    </linkage_descriptor>

    <local_time_offset_descriptor>
      <!-- One per region -->
      <region country_code="char3, required"
              country_region_id="uint6, required"
              local_time_offset="int, required"
              time_of_change="YYYY-MM-DD hh:mm:ss, required"
              next_time_offset="int, required"/>
      <!-- local_time_offset and next_time_offset: -780 to +780 minutes (-13 to +13 hours) -->
    </local_time_offset_descriptor>

    <logical_channel_number_descriptor>
      <!-- One per service -->
      <service service_id="uint16, required"
               logical_channel_number="uint10, required"
               visible_service="bool, default=true"/>
    </logical_channel_number_descriptor>

    <message_descriptor message_id="uint8, required"
                        language_code="char3, required">
      <text>String</text>
    </message_descriptor>

    <network_name_descriptor network_name="string, required"/>

    <parental_rating_descriptor>
      <!-- One per country -->
      <country country_code="char3, required"
               rating="uint8, required"/>
    </parental_rating_descriptor>

    <private_data_specifier_descriptor private_data_specifier="uint32|eacem|eutelsat, required"/>

    <S2_satellite_delivery_system_descriptor
        backwards_compatibility="bool, required"
        scrambling_sequence_index="uint18, optional"
        input_stream_identifier="uint8, optional"/>

    <satellite_delivery_system_descriptor
        frequency="SatelliteFrequencyHz, required"
        orbital_position="SatelliteOrbitalPosition, eg. 19.2, required"
        west_east_flag="east|west, required"
        polarization="horizontal|vertical|left|right, required"
        roll_off="0.35|0.25|0.20|reserved, default=0.35"
        modulation_system="DVB-S|DVB-S2, default=DVB-S"
        modulation_type="auto|QPSK|8PSK|16-QAM, default=QPSK"
        symbol_rate="SatelliteSymbolRate, required"
        FEC_inner="undefined|1/2|2/3|3/4|5/6|7/8|8/9|3/5|4/5|9/10|none|, required"/>

    <service_descriptor
        service_type="uint8, required"
        service_provider_name="string, required"
        service_name="string, required"/>

    <service_list_descriptor>
      <!-- One per service -->
      <service service_id="uint16, required"
               service_type="uint8, required"/>
    </service_list_descriptor>

    <short_event_descriptor language_code="char3, required">
      <event_name>String</event_name>
      <text>String</text>
    </short_event_descriptor>

    <STD_descriptor leak_valid="bool, required"/>

    <stream_identifier_descriptor component_tag="uint8, required"/>

    <subtitling_descriptor>
      <!-- One per subtitle -->
      <subtitling language_code="char3, required"
                  subtitling_type="uint8, required"
                  composition_page_id="uint16, required"
                  ancillary_page_id="uint16, required"/>
    </subtitling_descriptor>

    <supplementary_audio_descriptor
        mix_type="uint1, required"
        editorial_classification="uint5, required"
        language_code="char3, optional">
      <private_data>
        Hexadecimal content
      </private_data>
    </supplementary_audio_descriptor>

    <teletext_descriptor>
      <!-- One per page -->
      <teletext language_code="char3, required"
                teletext_type="uint5, required"
                page_number="uint16, required"/>
    </teletext_descriptor>

    <terrestrial_delivery_system_descriptor
        centre_frequency="TerrestrialFrequencyHz, required"
        bandwidth="8MHz|7MHz|6MHz|5MHz, required"
        priority="HP|LP, required"
        no_time_slicing="bool, required"
        no_MPE_FEC="bool, required"
        constellation="QPSK|16-QAM|64-QAM, required"
        hierarchy_information="uint3, required"
        code_rate_HP_stream="1/2|2/3|3/4|5/6|7/8, required"
        code_rate_LP_stream="1/2|2/3|3/4|5/6|7/8, required"
        guard_interval="1/32|1/16|1/8|1/4, required"
        transmission_mode="2k|8k|4k, required"
        other_frequency="bool, required"/>

  </_descriptors>

</tsduck>
